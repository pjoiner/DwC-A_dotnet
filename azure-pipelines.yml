# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'
  VersionPrefix: '0.$(majorVersion).$(minorVersion).$(patchVersion)'

steps:
- task: UseDotNet@2
  displayName: 'Use dotnet sdk 3.x'
  inputs:
    version: 3.x
    includePreviewVersions: true

- script: |
    dotnet build --configuration $(buildConfiguration) 
    dotnet test "src/Tests/Tests.csproj" -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura -p:CoverletOutput="coverage/report" -l trx
  displayName: 'dotnet build $(buildConfiguration)'

- task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
  displayName: ReportGenerator
  inputs:
    reports: 'src/Tests/coverage/report.cobertura.xml'
    targetdir: 'report'
    reporttypes: 'HtmlInline_AzurePipelines;Cobertura;Badges'
    assemblyfilters: '-xunit*'

- task: PublishTestResults@2
  inputs: 
    testRunner: VSTest
    testResultsFiles: 'src/Tests/TestResults/*.trx'

# Publish Code Coverage Results
# Publish Cobertura or JaCoCo code coverage results from a build
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura' # Options: cobertura, jaCoCo
    summaryFileLocation: '**/report.cobertura.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/report'

# Build NuGet package
- task: DotNetCoreCLI@2
  displayName: 'Build NuGet Package'
  inputs:
    command: 'pack'
    configuration: '$(BuildConfiguration)'
    packagesToPack: '$(System.DefaultWorkingDirectory)/**/DwC-A_dotnet.csproj' 
    packDestination: '$(build.artifactStagingDirectory)'
    versioningScheme: $(versioningScheme)
    versionEnvVar: 'BUILDNUMBER'
    majorVersion: '$(majorVersion)'
    minorVersion: '$(minorVersion)'
    patchVersion: '$(patchVersion)'

# Publish Package as Build Artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'NuGet package' 
