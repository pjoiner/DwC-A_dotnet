# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'
  BUILD_BUILDNUMBER: '$(majorVersion).$(minorVersion).$(patchVersion)'
  VersionPrefix: '0.$(BUILD_BUILDNUMBER)'

steps:
- script: |
    dotnet build --configuration $(buildConfiguration) 
    dotnet test "src/Tests/Tests.csproj" -p:CollectCoverage=true -p:CoverletOutputFormat=cobertura -p:CoverletOutput="coverage/report" -l trx
    dotnet tool install dotnet-reportgenerator-globaltool --tool-path tools --version=4.0.0-rc4
    tools\reportgenerator "-reports:src/Tests/coverage/report.cobertura.xml" "-targetdir:report" "-verbosity:Verbose"
  displayName: 'dotnet build $(buildConfiguration)'

- task: PublishTestResults@1
  inputs: 
    testRunner: VSTest
    testResultsFiles: 'src/Tests/TestResults/*.trx'

# Publish Code Coverage Results
# Publish Cobertura or JaCoCo code coverage results from a build
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura' # Options: cobertura, jaCoCo
    summaryFileLocation: '**/report.cobertura.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/report'

# Build NuGet package
- task: DotNetCoreCLI@2
  displayName: 'Build NuGet Package'
  inputs:
    command: 'pack'
    configuration: 'release'
    packagesToPack: '$(System.DefaultWorkingDirectory)/**/DwC-A_dotnet.csproj' 
    packDestination: '$(build.artifactStagingDirectory)'
    versioningScheme: $(versioningScheme)
    majorVersion: '$(majorVersion)'
    minorVersion: '$(minorVersion)'
    patchVersion: '$(patchVersion)'

# Publish Package as Build Artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'NuGet package' 
